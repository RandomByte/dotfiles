#!/bin/bash
#
# dot
#
# `dot` handles installation, updates, things like that. Run it periodically
# to make sure you're on the latest and greatest.
set -e

export ZSH=$HOME/.dotfiles
export ZSH_STR='$HOME/.dotfiles'

mkdir -p $ZSH/repositories/

if [ -d "$ZSH/repositories/pure" ]; then
	echo "Updating pure repository clone..."
	(cd "$ZSH/repositories/pure" && git pull)
else
	echo "Cloning pure repository..."
	git clone git://github.com/sindresorhus/pure.git "$ZSH/repositories/pure"
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
	# == macOS only ==

	# Install homebrew
	$ZSH/homebrew/install.sh 2>&1
	source $ZSH/homebrew/env.zsh

	# Update homebrew
	$ZSH/homebrew/update.sh

	# Install Yarn 1.x
	mkdir -p $ZSH/bin/yarn/
	curl -L https://yarnpkg.com/latest.tar.gz | tar xvz -C $ZSH/bin/yarn/ --strip-components 1
else
	# == Linux only ==

	$ZSH/apt/install.sh

	# Retrieve some binaries
	curl -L https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/third_party/build_fatpack/diff-so-fancy > $ZSH/bin/diff-so-fancy
	chmod +x $ZSH/bin/diff-so-fancy

	curl -L https://raw.githubusercontent.com/tj/n/master/bin/n > $ZSH/bin/n
	chmod +x $ZSH/bin/n

	curl -L "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"  > $ZSH/bin/kubectl
	chmod +x $ZSH/bin/kubectl

	rm -rf $ZSH/z/
	mkdir -p $ZSH/z/
	curl -L https://github.com/rupa/z/archive/v1.9.tar.gz | tar xvz -C $ZSH/z/
	mv $ZSH/z/z-1.9/* $ZSH/z/ #*/
	rmdir $ZSH/z/z-1.9

	# Install zsh-completions
	if [ -d "$ZSH/repositories/zsh-completions" ]; then
		echo "Updating zsh-completions repository clone..."
		(cd "$ZSH/repositories/zsh-completions" && git pull)
	else
		echo "Cloning zsh-completions repository..."
		git clone git://github.com/zsh-users/zsh-completions.git "$ZSH/repositories/zsh-completions"
	fi
	# force rebuild zcompdump after autocompletion update
	rm -f ~/.zcompdump

	# Install zsh-autosuggestions
	if [ -d "$ZSH/repositories/zsh-autosuggestions" ]; then
		echo "Updating zsh-autosuggestions repository clone..."
		(cd "$ZSH/repositories/zsh-autosuggestions" && git pull)
	else
		echo "Cloning zsh-autosuggestions repository..."
		git clone git://github.com/zsh-users/zsh-autosuggestions.git "$ZSH/repositories/zsh-autosuggestions"
	fi

	# Install zsh-syntax-highlighting
	if [ -d "$ZSH/repositories/zsh-syntax-highlighting" ]; then
		echo "Updating zsh-syntax-highlighting repository clone..."
		(cd "$ZSH/repositories/zsh-syntax-highlighting" && git pull)
	else
		echo "Cloning zsh-syntax-highlighting repository..."
		git clone git://github.com/zsh-users/zsh-syntax-highlighting.git "$ZSH/repositories/zsh-syntax-highlighting"
	fi

	# Install gnome-terminal theme Nord
	if [ -d "$ZSH/repositories/nord-gnome-terminal" ]; then
		echo "Updating nord-gnome-terminal repository clone..."
		(cd "$ZSH/repositories/nord-gnome-terminal" && git pull)
	else
		echo "Cloning nord-gnome-terminal repository..."
		git clone https://github.com/arcticicestudio/nord-gnome-terminal.git "$ZSH/repositories/nord-gnome-terminal"
	fi
	$ZSH/repositories/nord-gnome-terminal/src/nord.sh

	# Source dot-profile-include.sh in .profile
	if [ -f "$HOME/.profile" ]; then
		DOT_PROFILE_INCLUDE=". $ZSH_STR/zsh/dot-profile-include.sh"

		if ! grep -qxF "$DOT_PROFILE_INCLUDE" "$HOME/.profile"; then
			echo "Sourcing zsh environment in .profile..."
			echo "$DOT_PROFILE_INCLUDE" >> "$HOME/.profile"
		else
			echo ".profile already sources zsh environment"
		fi
	else
		echo "Could not find a .profile file in users home directory. Skipping inserting zsh env sourcing"
	fi

	# Prompt user since chsh requires user password
	echo "Do you wish to change the users login shell to /usr/bin/zsh?"
	read chsh_answer
	if [ "$chsh_answer" != "${chsh_answer#[Yy]}" ] ;then
		echo "Changing login shell..."
		chsh -s /usr/bin/zsh
	else
		echo "Skipping login shell change..."
	fi
fi

# Retrieve latest docker completions
mkdir -p $ZSH/docker
curl -L https://raw.githubusercontent.com/docker/cli/master/contrib/completion/zsh/_docker > $ZSH/docker/_docker
curl -L https://raw.githubusercontent.com/docker/compose/master/contrib/completion/zsh/_docker-compose > $ZSH/docker/_docker-compose

# Retrieve z.sh
mkdir -p $ZSH/z
curl -L https://raw.githubusercontent.com/rupa/z/v1.11/z.sh > $ZSH/z/z.sh
chmod +x $ZSH/z/z.sh
